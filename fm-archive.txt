
ffmpeg -i echo2.mp3 

ffmpeg -y -i echo2.mp3 -map 0 -c copy -f segment -segment_time 120 -reset_timestamps 1 -strftime 1 "%Y-%m-%d_%H-%M-%S.mp3"

I have a big mp3 file, which I started recording at 17:24. Trying to split into 2 minute segments:



ffmpeg -y -i test.mp3 -map 0 -c copy -f segment -segment_time 120 -reset_timestamps 1 -strftime 1 '1/test-%H-%M.mp3'

ffmpeg -y -i echo2.mp3 -map 0 -c copy -f segment -segment_time 120 -reset_timestamps 1 -strftime 1 1/echo-%H-%M.mp3

ffmpeg -y -i echo2.mp3 -map 0 -c copy -f segment -segment_time 120 -reset_timestamps 1 -strftime 1 "1/echo-%{localtime:%H-%M}.mp3"

ffmpeg -i video.mp4 -vf "drawtext=expansion=strftime: \
    basetime=$(date +%s -d'2013-12-01 12:00:00')000000: \
    text='%H\\:%S\\:%S'" output.mp4


17:24


23:34

base=`date -d '19:51' +%s`
for f in test-??.mp3; do
     mv $f test-`date -d@$(( (1${f:5:2} - 100)*120 + base)) +%H-%M`.mp3
done

i=0
for f in test-??-??.mp3; do
    f2=00$i
    mv $f test-${f2: -3}.mp3
    i=$((i+1))
done

(
set -e
seglen=600
basestamp=
lastdir=
shopt -s nullglob
for f in test-???.*; do
    ext=${f##*.}
    i=${f#test-}; i=${i%.*}; i=$((1${i} - 1${i//[0-9]/0}))
    if [ -z "$basestamp" ]; then
        basestamp=$((`stat -c %Y $f` - seglen))
        basenum=$i
    fi
    stamp=$(( (i - basenum)*seglen + basestamp ))
    dir=`printf '%(%Y%m%d)T' $stamp`
    [ "$lastdir" = "$dir" ] || mkdir -p "$dir"
    lastdir=$dir
    newname=`printf '%s/test-%(%H-%M)T' "$dir" $stamp`.$ext
    mv --no-clobber "$f" "$newname"
done
)


PATH=`echo "$PATH" | sed 's,/cygdrive/u/[^:]*:,,g'`


lastfile=
#lastfile=test-18-47.mp3
while true; do
    for f in *.*; do
        if [ -z "$lastfile" ]; then
            lastfile=$f
            mplayer "$f"
            break
        fi
        if [ "$f" = "$lastfile" ]; then
            lastfile=
        fi
    done
done
