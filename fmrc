PATH=`echo "$PATH" | sed 's,/cygdrive/u/[^:]*:,,g'`
unset TZ
[ -z "$_SSH_AGENT_HANDLE" ] || { eval "exec $_SSH_AGENT_HANDLE>&-"; unset _SSH_AGENT_HANDLE SSH_AUTH_SOCK; }
case $HOSTNAME in BASIN) export http_proxy="http://proxy.reksoft.ru:3128" https_proxy="http://proxy.reksoft.ru:3128";; esac

seglen=600
limit=
shopt -s nullglob

fm_record_in_empty_dirs() {
    local station i subdir have
    station=${1:?}
    shift

    subdir="$station"
    mkdir -p "${subdir:?}/`date +%Y%m%d`" "${subdir:?}/`date --date=tomorrow +%Y%m%d`"

    while true; do
        echo "writing to $subdir"
        mkdir -p $subdir

        pwd
        "$@"
    
        sleep 10
    done
}

fm_run_in_new_term() {
    cmd /c start "" "$@"
    #cmd /c start bash -c '"$@"' x "$@"
}

fm_run_me_in_new_term() {
    fm_run_in_new_term bash -c '. "$0"; "$@"' "$THISDIR/fmrc" "$@"
}

fm_ffmpeg_watchdog() {
    local ffmpeg_pid=${1:?}
    local watchdir=${2:?}
    local newstate prevstate=

    cd "$watchdir"
    while true; do
        mkdir -p "`date --date=tomorrow +%Y%m%d`"
        newstate=`du -ksx .`
        #newstate="y"
        if [ x"$prevstate" = x"$newstate" ]; then
            echo
            echo "ffmpeg seems hung"
            echo
            fm_killffmpeg "$ffmpeg_pid"
            break
        fi
        prevstate=$newstate
        sleep 120
    done
}

fm_ffmpeg() {
    local ffmpeg_pid ffmpeg_watchdog_pid
    echo ffmpeg "$@"
    ffmpeg "$@" &
    ffmpeg_pid=$!
    fm_ffmpeg_watchdog "$ffmpeg_pid" "$subdir" &
    ffmpeg_watchdog_pid=$!

    echo
    echo "ffmpeg_pid: $ffmpeg_pid , ffmpeg_watchdog_pid: $ffmpeg_watchdog_pid , BASHPID: $BASHPID"
    echo

    wait $ffmpeg_pid
    kill -KILL $ffmpeg_watchdog_pid 2>/dev/null
}

fm_killffmpeg() {
    local ffmpeg_pid ffmpeg_winpid a b ffmpeg_child_winpid

    ffmpeg_pid=${1:?}

    if read ffmpeg_winpid <"/proc/$ffmpeg_pid/winpid" 2>/dev/null; then
        a=$(wmic process where parentprocessid=$ffmpeg_winpid get processid)
        b=( ${a//$'\r'/} )
        ffmpeg_child_winpid=${b[1]}

        echo "killing spawned ffmpeg winpid: $ffmpeg_child_winpid"
        taskkill /F /pid $ffmpeg_child_winpid
        echo "killing parent ffmpeg pid: $ffmpeg_pid (winpid: $ffmpeg_winpid)"
        kill -KILL $ffmpeg_pid
    else
        kill -TERM $ffmpeg_pid
    fi
}

#-reset_timestamps 1
#limit="-t $((RANDOM / 500 + 7200))"

fm_rec_echo() {
    fm_ffmpeg -y -re -i "http://81.19.85.197/echo.mp3" $limit -map 0 -c copy -f segment -segment_time $seglen -strftime 1 "${subdir:?}/%Y%m%d/test-%H-%M.mp3"
}

fm_rec_roks() {
    local url=$( wget --quiet -O - "http://roks.ru/player.php" | sed -n "s,.*\\\\'url\\\\': \\\\'\\(rtmp://[^\\\\]*\)\\\\'.*,\1,;t L1;d;:L1 p;q" )
    if [ -z "$url" ]; then
        echo "failed to get stream url"
        return 1
    fi
    fm_ffmpeg -i "${url:?}" -map 0 -c copy -f segment -segment_time $seglen -strftime 1 "${subdir:?}/%Y%m%d/test-%H-%M.flv"
}


fm_all() {
    [ $# = 0 ] && set -- echo roks
    for st in "$@"; do
        fm_run_me_in_new_term fm_record_in_empty_dirs $st fm_rec_$st &
    done
}

# /cygdrive/p/Docs/fm-archive/fm all

fm_ren() {
    local basestamp basenum lastdir stamp dir newname ext i
    basestamp=
    lastdir=
    for f in test-???.*; do
        ext=${f##*.}
        i=${f#test-}; i=${i%.*}; i=$((1${i} - 1${i//[0-9]/0}))
        if [ -z "$basestamp" ]; then
            basestamp=$((`stat -c %Y $f` - seglen))
            basenum=$i
        fi
        stamp=$(( (i - basenum)*seglen + basestamp ))
        dir=`printf '%(%Y%m%d)T' $stamp`
        [ "$lastdir" = "$dir" ] || mkdir -p "$dir"
        lastdir=$dir
        newname=`printf '%s/test-%(%H-%M)T' "$dir" $stamp`.$ext
        mv --no-clobber "$f" "$newname"
    done
}

fm_playdir() {
    [ -z "$1" ] || cd "$1"
    lastfile=
    [ -z "$2" ] || for lastfile in $2; do : ; done
    #lastfile=test-18-47.mp3

    # repeat if new files added
    while true; do
        for f in *.*; do
            if [ -z "$lastfile" ]; then
                lastfile=$f
                mplayer "$f" || true
                continue 2
            fi
            if [ "$f" = "$lastfile" ]; then
                lastfile=
            fi
        done
        break
    done
}
