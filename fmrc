minfree=$((100*1000000))

PATH=`echo "$PATH" | sed 's,/cygdrive/u/[^:]*:,,g'`
unset TZ
[ -z "$_SSH_AGENT_HANDLE" ] || { eval "exec $_SSH_AGENT_HANDLE>&-"; unset _SSH_AGENT_HANDLE SSH_AUTH_SOCK; }
case $HOSTNAME in BASIN) export http_proxy="http://proxy.reksoft.ru:3128" https_proxy="http://proxy.reksoft.ru:3128";; esac

seglen=600
limit=
shopt -s nullglob

fm_record_in_empty_dirs() {
    local station i subdir have
    station=${1:?}
    shift

    subdir="$station"

    while true; do
        echo "writing to $subdir"
        mkdir -p "${subdir:?}/`date --date=tomorrow +%Y%m%d`" "${subdir:?}/`date +%Y%m%d`"

        "$@"
        [ x"$rc" = x"0" ] || sleep 10
    done
}

fm_run_in_new_term() {
    cmd /c start "" "$@"
    #cmd /c start bash -c '"$@"' x "$@"
}

fm_run_me_in_new_term() {
    printf '%q\n' "starting" "$@"
    if [ -e /proc/self/winpid ]; then
        fm_run_in_new_term bash -c '. "$0"; "$@"' "$THISDIR/fmrc" "$@"
    else
        "$@"
    fi
}

fm_ffmpeg_watchdog() {
    local ffmpeg_pid=${1:?}
    local watchdir=${2:?}
    local newstate prevstate=

    cd "$watchdir"
    while true; do
        "$THISDIR/cleandisk" --dir .. --lockdir --minfree "$minfree" >/dev/null
        mkdir -p "`date --date=tomorrow +%Y%m%d`"
        newstate=`du -ksx .`
        #newstate="y"
        if [ x"$prevstate" = x"$newstate" ]; then
            echo
            echo "ffmpeg[$ffmpeg_pid] seems hung"
            echo
            fm_killffmpeg "$ffmpeg_pid"
            break
        fi
        prevstate=$newstate
        sleep 120
    done
}

fm_ffmpeg() {
    rc=1
    local ffmpeg_pid ffmpeg_watchdog_pid
    echo ffmpeg "$@"
    ffmpeg "$@" &
    ffmpeg_pid=$!
    fm_ffmpeg_watchdog "$ffmpeg_pid" "$subdir" &
    ffmpeg_watchdog_pid=$!

    echo
    echo "ffmpeg_pid: $ffmpeg_pid , ffmpeg_watchdog_pid: $ffmpeg_watchdog_pid , BASHPID: $BASHPID"
    echo

    rc=0
    wait $ffmpeg_pid || rc=$?
    kill -KILL $ffmpeg_watchdog_pid 2>/dev/null || true
}

fm_killffmpeg() {
    local ffmpeg_pid ffmpeg_winpid a b ffmpeg_child_winpid

    ffmpeg_pid=${1:?}

    if { read ffmpeg_winpid <"/proc/$ffmpeg_pid/winpid"; } 2>/dev/null; then
        echo "killing windows process $ffmpeg_winpid and children"
        a=$(wmic process where parentprocessid=$ffmpeg_winpid get processid)
        b=( ${a//$'\r'/} )
        ffmpeg_child_winpid=${b[1]}

        echo "killing spawned ffmpeg winpid: $ffmpeg_child_winpid"
        taskkill /F /pid $ffmpeg_child_winpid
        echo "killing parent ffmpeg pid: $ffmpeg_pid (winpid: $ffmpeg_winpid)"
        kill -KILL $ffmpeg_pid || true
    else
        for sig in TERM TERM KILL; do
            [ -d "/proc/$ffmpeg_pid" ] || break
            echo "killing process $ffmpeg_pid"
            kill -$sig $ffmpeg_pid || break
            sleep 10
        done
    fi
}

#-reset_timestamps 1
#limit="-t $((RANDOM / 500 + 7200))"

fm_rec_echo() {
    local convargs
    #convargs='-c copy'
    convargs='-q:a 9'
    fm_ffmpeg -loglevel warning -y -i "http://81.19.85.197/echo.mp3" $limit -af volume=10dB $convargs -f segment -segment_time $seglen -segment_atclocktime 1 -strftime 1 "${subdir:?}/%Y%m%d/test-%H-%M-%S.mp3"
}

fm_rec_roks() {
    local convargs
    convargs='-c copy'
    #convargs='-q:a 9'
    #local url=$( wget --quiet -O - "http://roks.ru/player.php" | sed -n "s,.*\\\\'url\\\\': \\\\'\\(rtmp://[^\\\\]*\)\\\\'.*,\1,;t L1;d;:L1 p;q" )
    local url=$( wget --quiet -O - "http://roks.ru/player.php" | sed 's,.*"\([^"]*roks.stream[^"]*\).*,\1,;t;d' )
    if [ -z "$url" ]; then
        echo "failed to get stream url"
	rc=1
        return
    fi
    #fm_ffmpeg -loglevel warning -i "${url:?}" -map 0 -c copy -f segment -segment_time $seglen -segment_atclocktime 1 -strftime 1 "${subdir:?}/%Y%m%d/test-%H-%M-%S.flv"
    fm_ffmpeg -loglevel warning -i "${url:?}" $convargs -f segment -segment_time $seglen -segment_atclocktime 1 -strftime 1 "${subdir:?}/%Y%m%d/test-%H-%M-%S.mp3"
}


fm_all() {
    local wait=
    if [ x"--wait" = x"$1" ]; then
       wait=wait
       shift
    fi
    [ $# = 0 ] && set -- echo roks
    for st in "$@"; do
        fm_run_me_in_new_term fm_record_in_empty_dirs $st fm_rec_$st &
    done
    $wait
}

# /cygdrive/p/Docs/fm-archive/fm all

fm_ren() {
    local basestamp basenum lastdir stamp dir newname ext i
    basestamp=
    lastdir=
    for f in test-???.*; do
        ext=${f##*.}
        i=${f#test-}; i=${i%.*}; i=$((1${i} - 1${i//[0-9]/0}))
        if [ -z "$basestamp" ]; then
            basestamp=$((`stat -c %Y $f` - seglen))
            basenum=$i
        fi
        stamp=$(( (i - basenum)*seglen + basestamp ))
        dir=`printf '%(%Y%m%d)T' $stamp`
        [ "$lastdir" = "$dir" ] || mkdir -p "$dir"
        lastdir=$dir
        newname=`printf '%s/test-%(%H-%M)T' "$dir" $stamp`.$ext
        mv --no-clobber "$f" "$newname"
    done
}

fm_playdir() {
    [ -z "$1" ] || cd "$1"
    local startfile=
    [ -z "$2" ] || for startfile in $2; do : ; done
    local lastfile=$startfile

    # repeat if new files added
    while true; do
        for f in *.*; do
            if [ -z "$lastfile" -o x"$f" = x"$startfile" ]; then
                startfile=
                lastfile=$f
                mplayer "$f" || true
                continue 2
            fi
            if [ x"$f" = x"$lastfile" ]; then
                lastfile=
            fi
        done
        break
    done
}

fm_resetup() {
    set -e
    set -o pipefail
    function errtrap {     es=$?;     echo "ERROR line $1: Command exited with status $es.">&2; }; trap 'errtrap $LINENO' ERR
    
    THISDIR=`cd "\`dirname \"${BASH_SOURCE[0]}\"\`" && pwd`
}

fm_run_me() {
    fm_resetup
    "$@"
}
